development:
  openn:
    csv:
     owner: <%= ENV['OPENN_OWNER'] %>
     description: <%= ENV['OPENN_DESCRIPTION'] || 'Generated from CSV through automated workflow' %>
     initial_stop: <%= ENV['OPENN_INITIAL_STOP'] || 'create' %>
     metadata_suffix: <%= ENV['OPENN_METADATA_SUFFIX'] || '' %>
     assets_suffix: <%= ENV['OPENN_ASSETS_SUFFIX'] || 'data/' %>
     endpoints:
       metadata_fetch_method: rsync
       metadata_protocol: smb
       assets_fetch_method: rsync
       assets_protocol: smb
     metadata:
       descriptive_filename: MM_Metadata.xlsx
       structural_filename: MM_struct_metadata.xlsx
  pap:
      csv:
       owner: <%= ENV['PAP_OWNER'] %>
       description: <%= ENV['PAP_DESCRIPTION'] || 'Generated from CSV through automated workflow' %>
       initial_stop: <%= ENV['PAP_INITIAL_STOP'] || 'create' %>
       metadata_suffix: <%= ENV['PAP_METADATA_SUFFIX'] || '' %>
       assets_suffix: <%= ENV['PAP_ASSETS_SUFFIX'] || 'data/' %>
       endpoints:
         metadata_fetch_method: rsync
         metadata_protocol: smb
         assets_fetch_method: rsync
         assets_protocol: smb
       metadata:
         descriptive_filename: MM_Metadata.xlsx
         structural_filename: MM_struct_metadata.xlsx
  kaplan:
    csv:
     owner: <%= ENV['KAPLAN_OWNER'] %>
     description: <%= ENV['KAPLAN_DESCRIPTION'] || 'Generated from CSV through automated workflow' %>
     initial_stop: <%= ENV['KAPLAN_INITIAL_STOP'] || 'create' %>
     metadata_suffix: <%= ENV['KAPLAN_METADATA_SUFFIX'] || '' %>
     assets_suffix: <%= ENV['KAPLAN_ASSETS_SUFFIX'] || 'data/' %>
     endpoints:
       metadata_fetch_method: rsync
       metadata_protocol: smb
       assets_fetch_method: rsync
       assets_protocol: smb
     metadata:
       descriptive_filename: metadata.xlsx
       structural_filename: struct_metadata.xlsx
     nonstandard:
       kaplan-rescue:
         endpoint: <%= ENV['KAPLAN_RESCUE_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       scanstore-rescue:
         endpoint: <%= ENV['SCANSTORE_RESCUE_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       managed-masters:
         endpoint: <%= ENV['OPENN_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed:
         endpoint: <%= ENV['PAP_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed-2:
         endpoint: <%= ENV['SCETI_COMPLETED_2_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed-3:
         endpoint: <%= ENV['SCETI_COMPLETED_3_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed-4:
         endpoint: <%= ENV['SCETI_COMPLETED_4_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       oceanus-sceti:
         endpoint: <%= ENV['OCEANUS_SCETI_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       mastersrbm:
         endpoint: <%= ENV['MASTERSRBM_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
  ingest_only:
     initial_stop: <%= ENV['INGEST_INITIAL_STOP'] || 'ingest' %>
     steps_to_skip: <%= ENV['INGEST_STEPS_TO_SKIP'] || ['fetch_metadata','fetch_assets','extract','file_check','xml'] %>

test:
  kaplan:
    csv:
      owner: testuser@email.edu
      description: 'Generated from CSV through automated workflow'
      initial_stop: xml
      metadata_suffix: ''
      assets_suffix: 'data/'
      endpoints:
        metadata_fetch_method: rsync
        metadata_protocol: smb
        assets_fetch_method: rsync
        assets_protocol: smb
      metadata:
        descriptive_filename: metadata.xlsx
        structural_filename: struct_metadata.xlsx
      nonstandard:
        test:
          endpoint: <%= Rails.root.join('spec', 'fixtures', 'example_manifest_loads') %>
          metadata_suffix: ''
          assets_suffix: ''
  ingest_only:
    initial_stop: ingest
    steps_to_skip: ['fetch_metadata','fetch_assets','extract','file_check','xml']

production:
  openn:
    csv:
     owner: <%= ENV['OPENN_OWNER'] %>
     description: <%= ENV['OPENN_DESCRIPTION'] || 'Generated from CSV through automated workflow' %>
     initial_stop: <%= ENV['OPENN_INITIAL_STOP'] || 'create' %>
     metadata_suffix: <%= ENV['OPENN_METADATA_SUFFIX'] || '' %>
     assets_suffix: <%= ENV['OPENN_ASSETS_SUFFIX'] || 'data/' %>
     endpoints:
       metadata_fetch_method: rsync
       metadata_protocol: smb
       assets_fetch_method: rsync
       assets_protocol: smb
     metadata:
       descriptive_filename: MM_Metadata.xlsx
       structural_filename: MM_struct_metadata.xlsx
  pap:
    csv:
     owner: <%= ENV['PAP_OWNER'] %>
     description: <%= ENV['PAP_DESCRIPTION'] || 'Generated from CSV through automated workflow' %>
     initial_stop: <%= ENV['PAP_INITIAL_STOP'] || 'create' %>
     metadata_suffix: <%= ENV['PAP_METADATA_SUFFIX'] || '' %>
     assets_suffix: <%= ENV['PAP_ASSETS_SUFFIX'] || 'data/' %>
     endpoints:
       metadata_fetch_method: rsync
       metadata_protocol: smb
       assets_fetch_method: rsync
       assets_protocol: smb
     metadata:
       descriptive_filename: MM_Metadata.xlsx
       structural_filename: MM_struct_metadata.xlsx
  kaplan:
    csv:
     owner: <%= ENV['KAPLAN_OWNER'] %>
     description: <%= ENV['KAPLAN_DESCRIPTION'] || 'Generated from CSV through automated workflow' %>
     initial_stop: <%= ENV['KAPLAN_INITIAL_STOP'] || 'create' %>
     metadata_suffix: <%= ENV['KAPLAN_METADATA_SUFFIX'] || '' %>
     assets_suffix: <%= ENV['KAPLAN_ASSETS_SUFFIX'] || 'data/' %>
     endpoints:
       metadata_fetch_method: rsync
       metadata_protocol: smb
       assets_fetch_method: rsync
       assets_protocol: smb
     metadata:
       descriptive_filename: metadata.xlsx
       structural_filename: struct_metadata.xlsx
     nonstandard:
       kaplan-rescue:
         endpoint: <%= ENV['KAPLAN_RESCUE_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       scanstore-rescue:
         endpoint: <%= ENV['SCANSTORE_RESCUE_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       managed-masters:
         endpoint: <%= ENV['OPENN_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed:
         endpoint: <%= ENV['PAP_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed-2:
         endpoint: <%= ENV['SCETI_COMPLETED_2_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed-3:
         endpoint: <%= ENV['SCETI_COMPLETED_3_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       sceti-completed-4:
         endpoint: <%= ENV['SCETI_COMPLETED_4_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       oceanus-sceti:
         endpoint: <%= ENV['OCEANUS_SCETI_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
       mastersrbm:
         endpoint: <%= ENV['MASTERSRBM_HARVESTING_ENDPOINT_REMOTE'] %>
         metadata_suffix: ''
         assets_suffix: ''
  ingest_only:
    initial_stop: <%= ENV['INGEST_INITIAL_STOP'] || 'ingest' %>
    steps_to_skip: <%= ENV['INGEST_STEPS_TO_SKIP'] || ['fetch_metadata','fetch_assets','extract','file_check','xml'] %>
